name: CI Pipeline

on:
  push:
    branches: [ main ]

env:
  PHP_VERSION: '8.4'

jobs:
  phpstan:
    name: PHPStan
    runs-on: ubuntu-latest
    env:
      APP_RUNTIME_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, zip
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPStan
        run: composer phpstan

  cs-check:
    name: PHP CS Fixer
    runs-on: ubuntu-latest
    env:
      APP_RUNTIME_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, zip
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHP CS Fixer (Dry Run)
        run: composer cs-check

  phpmd:
    name: PHPMD
    runs-on: ubuntu-latest
    env:
      APP_RUNTIME_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, zip
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run PHPMD
        run: composer phpmd

  lint-twig:
    name: Lint Twig Templates
    runs-on: ubuntu-latest
    env:
      APP_RUNTIME_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, zip
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run Twig Lint
        run: php bin/console lint:twig templates

  lint-yaml:
    name: Lint YAML Files
    runs-on: ubuntu-latest
    env:
      APP_RUNTIME_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          extensions: mbstring, xml, ctype, iconv, intl, zip
          coverage: none
          tools: composer:v2

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-${{ env.PHP_VERSION }}-composer-
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run YAML Lint
        run: php bin/console lint:yaml config --parse-tags

  security-check:
    name: Symfony Security Check
    runs-on: ubuntu-latest
    env:
      APP_RUNTIME_ENV: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          coverage: none
          tools: composer:v2

      - name: Install Symfony CLI
        run: |
          curl -1sLf 'https://dl.cloudsmith.io/public/symfony/stable/setup.deb.sh' | sudo -E bash
          sudo apt-get update
          sudo apt-get install symfony-cli -y

      - name: Run Symfony Security Check
        run: symfony check:security --env=test
